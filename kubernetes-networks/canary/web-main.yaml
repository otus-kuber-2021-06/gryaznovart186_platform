apiVersion: apps/v1
kind: Deployment
metadata:
  name: main
spec:
  replicas: 1
  selector:
    matchLabels:
      app: main
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      labels:
        app: main
    spec:
      containers:
        - name: main
          image: gryaznovart186/nginx-otus-hw1
          resources:
            limits:
              memory: "128Mi"
              cpu: "75m"
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
          livenessProbe:
            tcpSocket:
              port: 8000
          volumeMounts:
            - mountPath: /app
              name: web
            - mountPath: /var/cache/nginx
              name: cache
            - mountPath: /run
              name: pid
            - mountPath: /var/log/nginx
              name: logs
      initContainers:
      - name: init
        image: busybox:1.33.1
        command: ['sh', '-c', 'wget -O- https://tinyurl.com/otus-k8s-intro | sh']
        volumeMounts:
          - mountPath: /app
            name: web
      volumes:
        - name: web
          emptyDir: {}
        - name: logs
          emptyDir: {}
        - name: cache
          emptyDir: {}
        - name: pid
          emptyDir: {}
      securityContext:
        runAsUser: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: main
spec:
  selector:
    app: main
  type: ClusterIP
  clusterIP: None
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: main
            port:
              number: 8000
    host: canary.example
